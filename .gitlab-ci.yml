# GitLab CI/CD Pipeline para Users API com MySQL
variables:
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
    -DinstallAtEnd=true
    -DdeployAtEnd=true

image: maven:3-openjdk-17

cache:
  paths:
    - .m2/repository

stages:
  - build
  - test
  - verify
  - deploy

build:
  stage: build
  script:
    - echo "Building Users API project..."
    - mvn $MAVEN_CLI_OPTS clean compile
    - echo "Build completed successfully!"
  artifacts:
    expire_in: 1 hour
    paths:
      - target/classes/
    when: always

# Test stage com MySQL service
test:
  stage: test
  services:
    - name: mysql:8.0
      alias: mysql # O hostname do servi√ßo ser√° 'mysql'
      command: ["--default-authentication-plugin=mysql_native_password"]
  variables:
    # Vari√°veis para o servi√ßo MySQL
    MYSQL_ROOT_PASSWORD: "rootpassword"
    MYSQL_DATABASE: "CIS" # O servi√ßo MySQL criar√° este banco automaticamente
    MYSQL_INITDB_SKIP_TZINFO: "1"

    # Vari√°veis que o Spring Boot usar√° para se conectar ao banco!
    SPRING_DATASOURCE_URL: "jdbc:mysql://mysql:3306/CIS?autoReconnect=true&useSSL=false"
    SPRING_DATASOURCE_USERNAME: "root"
    SPRING_DATASOURCE_PASSWORD: "$MYSQL_ROOT_PASSWORD" # Reutiliza a vari√°vel do MySQL

    # Configura√ß√£o para o Maven encontrar o banco de dados
    DB_HOST: "mysql"
    DB_PORT: "3306"

  dependencies:
    - build
  before_script:
    # O cliente mysql n√£o vem na imagem base, ent√£o o instalamos
    - microdnf install -y mysql
    - echo "Aguardando o servi√ßo MySQL iniciar..."
    # Loop de espera mais robusto
    - |
      for i in {1..30}; do
        if mysqladmin ping -h "$DB_HOST" -P "$DB_PORT" -u "$SPRING_DATASOURCE_USERNAME" -p"$SPRING_DATASOURCE_PASSWORD" --silent; then
          echo "‚úÖ Conex√£o com o MySQL estabelecida com sucesso!"
          break
        fi
        if [ $i -eq 30 ]; then
          echo "‚ùå Timeout: N√£o foi poss√≠vel conectar ao MySQL."
          exit 1
        fi
        echo "Tentando conectar ao MySQL ($i/30)..."
        sleep 2
      done
    - echo "Verificando banco de dados criado..."
    - mysql -h "$DB_HOST" -u "$SPRING_DATASOURCE_USERNAME" -p"$SPRING_DATASOURCE_PASSWORD" -e "SHOW DATABASES;"
  script:
    - echo "üß™ Executando os testes da API..."
    - mvn $MAVEN_CLI_OPTS test
    - echo "‚úÖ Testes conclu√≠dos!"
  artifacts:
    expire_in: 1 day
    paths:
      - target/surefire-reports/
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
    when: always
  coverage: '/Total.*?([0-9]{1,3})%/'

.verify:
  stage: verify
  dependencies:
    - build
    - test
  script:
    - echo "Verificando Users API sem deployment..."
    - mvn $MAVEN_CLI_OPTS verify -DskipTests
    - echo "Verifica√ß√£o conclu√≠da com sucesso!"
  except:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

verify:jdk17:
  extends:
    - .verify
  artifacts:
    expire_in: 1 week
    paths:
      - target/*.jar
    when: on_success

package:
  stage: verify
  dependencies:
    - build
    - test
  script:
    - echo "Empacotando aplica√ß√£o Users API..."
    - mvn $MAVEN_CLI_OPTS package -DskipTests
    - echo "Aplica√ß√£o empacotada com sucesso!"
    - ls -la target/*.jar || echo "Nenhum arquivo JAR encontrado"
  artifacts:
    expire_in: 1 week
    paths:
      - target/*.jar
    when: on_success

deploy:jdk17:
  stage: deploy
  dependencies:
    - build
    - test
    - verify:jdk17
  script:
    - echo "Fazendo deploy da Users API..."
    - if [ ! -f ci_settings.xml ]; then
      echo "Configura√ß√µes de CI ausentes! Criando artefatos de deployment...";
      mvn $MAVEN_CLI_OPTS package -DskipTests;
      else
      mvn $MAVEN_CLI_OPTS deploy --settings ci_settings.xml;
      fi
    - echo "Processo de deployment conclu√≠do!"
  artifacts:
    expire_in: 1 month
    paths:
      - target/*.jar
    when: on_success
  only:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH