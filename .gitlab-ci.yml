# GitLab CI/CD Pipeline para Users API com MySQL
variables:
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
    -DinstallAtEnd=true
    -DdeployAtEnd=true

image: maven:3-openjdk-17

cache:
  paths:
    - .m2/repository

stages:
  - build
  - test
  - verify
  - deploy

build:
  stage: build
  script:
    - echo "Building Users API project..."
    - mvn $MAVEN_CLI_OPTS clean compile
    - echo "Build completed successfully!"
  artifacts:
    expire_in: 1 hour
    paths:
      - target/classes/
    when: always

# Test stage com MySQL service
test:
  stage: test
  services:
    - name: mysql:8.0
      alias: mysql
      command: [
        "--default-authentication-plugin=mysql_native_password",
        "--innodb-buffer-pool-size=128M",
        "--innodb-log-file-size=32M",
        "--max_connections=50"
      ]
  variables:
    # MySQL service configuration - CORRIGIDO
    MYSQL_ROOT_PASSWORD: "rootpassword"
    MYSQL_DATABASE: "CIS"
    # Remover MYSQL_USER e MYSQL_PASSWORD quando usar root
    MYSQL_INITDB_SKIP_TZINFO: "1"
    MYSQL_ROOT_HOST: "%"
  dependencies:
    - build
  before_script:
    # Usar microdnf para instalar MySQL client na imagem Maven baseada em Red Hat
    - microdnf install mysql
    - echo "Aguardando MySQL estar disponível..."
    # Script melhorado para aguardar MySQL
    - |
      for i in {1..60}; do
        if mysql -h mysql -u root -prootpassword -e "SELECT 1" >/dev/null 2>&1; then
          echo "MySQL está pronto!"
          break
        fi
        if [ $i -eq 60 ]; then
          echo "Timeout: MySQL não ficou disponível em 120 segundos"
          exit 1
        fi
        echo "MySQL ainda não está pronto, tentativa $i/60..."
        sleep 2
      done
    # Verificar status do MySQL e criar banco
    - mysql -h mysql -u root -prootpassword -e "SELECT VERSION();"
    - mysql -h mysql -u root -prootpassword -e "CREATE DATABASE IF NOT EXISTS CIS CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
    - mysql -h mysql -u root -prootpassword -e "SHOW DATABASES;"
    - mysql -h mysql -u root -prootpassword -e "USE CIS; SHOW TABLES;"
    - echo "Banco CIS criado/verificado com sucesso!"
  script:
    - echo "Executando testes da Users API com MySQL..."
    - mvn $MAVEN_CLI_OPTS test -X
    - echo "Todos os testes passaram com sucesso!"
  artifacts:
    expire_in: 1 day
    paths:
      - target/surefire-reports/
      - target/site/jacoco/
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
    when: always
  coverage: '/Total.*?([0-9]{1,3})%/'

.verify:
  stage: verify
  dependencies:
    - build
    - test
  script:
    - echo "Verificando Users API sem deployment..."
    - mvn $MAVEN_CLI_OPTS verify -DskipTests
    - echo "Verificação concluída com sucesso!"
  except:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

verify:jdk17:
  extends:
    - .verify
  artifacts:
    expire_in: 1 week
    paths:
      - target/*.jar
    when: on_success

package:
  stage: verify
  dependencies:
    - build
    - test
  script:
    - echo "Empacotando aplicação Users API..."
    - mvn $MAVEN_CLI_OPTS package -DskipTests
    - echo "Aplicação empacotada com sucesso!"
    - ls -la target/*.jar || echo "Nenhum arquivo JAR encontrado"
  artifacts:
    expire_in: 1 week
    paths:
      - target/*.jar
    when: on_success

deploy:jdk17:
  stage: deploy
  dependencies:
    - build
    - test
    - verify:jdk17
  script:
    - echo "Fazendo deploy da Users API..."
    - if [ ! -f ci_settings.xml ]; then
      echo "Configurações de CI ausentes! Criando artefatos de deployment...";
      mvn $MAVEN_CLI_OPTS package -DskipTests;
      else
      mvn $MAVEN_CLI_OPTS deploy --settings ci_settings.xml;
      fi
    - echo "Processo de deployment concluído!"
  artifacts:
    expire_in: 1 month
    paths:
      - target/*.jar
    when: on_success
  only:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH